local options = {
    sort_by = "case_sensitive",
    filters = { dotfiles = true },
    disable_netrw = true,
    hijack_netrw = true,
    open_on_setup = true,
    renderer = {
        group_empty = true,
        icons = {
            show = { file = true, folder = true, folder_arrow = true, git = true },
            glyphs = {
                default = "",
                folder = { arrow_open = "", arrow_closed = "" },
                git = {
                    unstaged = "✗",
                    staged = "✓",
                    unmerged = "",
                    renamed = "➜",
                    untracked = "★",
                    deleted = "",
                    ignored = "◌",
                },
            },
        },
    },
    filesystem_watchers = {
        enable = true,
    },
    view = {
        adaptive_size = true,
        side = "left",
        width = 25,
        hide_root_folder = false,
        mappings = {
            list = {
                { key = { "<cr>", "o", "<2-LeftMouse>" }, action = "edit" },
                { key = "<C-e>", action = "edit_in_place" },
                { key = "O", action = "edit_no_picker" },
                { key = { "<C-]>", "<2-RightMouse>" }, action = "cd" },
                { key = "<C-v>", action = "vsplit" },
                { key = "<C-x>", action = "split" },
                { key = "<C-t>", action = "tabnew" },
                { key = "s", action = "split" },
                { key = "<", action = "prev_sibling" },
                { key = ">", action = "next_sibling" },
                { key = "P", action = "parent_node" },
                { key = "<BS>", action = "close_node" },
                { key = "<Tab>", action = "preview" },
                { key = "K", action = "first_sibling" },
                { key = "J", action = "last_sibling" },
                { key = "I", action = "toggle_git_ignored" },
                { key = "H", action = "toggle_dotfiles" },
                { key = "U", action = "toggle_custom" },
                { key = "R", action = "refresh" },
                { key = "a", action = "create" },
                { key = "d", action = "remove" },
                { key = "D", action = "trash" },
                { key = "r", action = "rename" },
                { key = "<F2>", action = "rename" },
                { key = "<C-r>", action = "full_rename" },
                { key = "x", action = "cut" },
                { key = "c", action = "copy" },
                { key = "p", action = "paste" },
                { key = "y", action = "copy_name" },
                { key = "Y", action = "copy_path" },
                { key = "gy", action = "copy_absolute_path" },
                { key = "[e", action = "prev_diag_item" },
                { key = "[c", action = "prev_git_item" },
                { key = "]e", action = "next_diag_item" },
                { key = "]c", action = "next_git_item" },
                { key = "u", action = "dir_up" },
                { key = "-", action = "dir_up" },
                { key = "f", action = "live_filter" },
                { key = "F", action = "clear_live_filter" },
                { key = "q", action = "close" },
                { key = "W", action = "collapse_all" },
                { key = "E", action = "expand_all" },
                { key = "S", action = "search_node" },
                { key = ".", action = "run_file_command" },
                { key = "<C-k>", action = "toggle_file_info" },
                { key = "g?", action = "toggle_help" },
                { key = "m", action = "toggle_mark" },
                { key = "bmv", action = "bulk_move" },
            },
        },
    },
}

require("nvim-tree").setup(options)

vim.api.nvim_set_keymap("", "<F9>", "<cmd>NvimTreeToggle<cr>", { silent = true })
vim.api.nvim_set_keymap("", "<F10>", "<cmd>NvimTreeFindFile<cr>", { silent = true })
